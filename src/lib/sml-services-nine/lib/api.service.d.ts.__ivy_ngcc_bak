import { Http, Response } from '@angular/http';
import { Observable } from 'rxjs';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/catch';
import 'rxjs/add/observable/throw';
import 'rxjs/add/operator/mergeMap';
export declare class ApiService {
    private _http;
    url: any;
    accessToken: any;
    headers: any;
    constructor(_http: Http);
    set(): void;
    Save(modelName: string, body?: any): Observable<any>;
    Retrieve(modelName: string, id: number): Observable<any>;
    Delete(modelName: string, id: number): Observable<any>;
    Execute(json?: any): Observable<any>;
    Encrypt(text?: string): Observable<any>;
    Decrypt(text?: string): Observable<any>;
    getSystemInfo(): Observable<any>;
    preLoad(): void;
    authenticate(username: any, password: any): Observable<any>;
    getLogin(user: any): boolean;
    errorHandler(error: Response): Observable<never>;
    subscribeCustomer(body: any): Observable<any>;
    createUser_authenticating(body: any): Observable<any>;
    submitUserConsent_authenticating(body: any): Observable<any>;
    uploadId_authenticating(body: any): Observable<any>;
    verifyUploadId_authenticating(body: any): Observable<any>;
    getQuiz_authenticating(body: any): Observable<any>;
    verifyQuiz_authenticating(body: any): Observable<any>;
    sevenYearCriminalHistory_authenticating(body: any): Observable<any>;
    listDocument(): Observable<any>;
    listComplateDocument(): Observable<any>;
    listDeleteDocument(): Observable<any>;
    createDocumentFromPandaDocTemplate(body: any): Observable<any>;
    createDocumentFromPDFFormFields(body: any): Observable<any>;
    createDocumentFromPDFFieldTags(body: any): Observable<any>;
    documentStatus(document_id: any): Observable<any>;
    documentDetails(document_id: any): Observable<any>;
    sendDocument(body: any, document_id: any): Observable<any>;
    shareDocument(body: any, document_id: any): Observable<any>;
    downloadDocument(document_id: any): Observable<any>;
    deleteDocument(document_id: any): Observable<any>;
    listTemplates(): Observable<any>;
    templateDetails(template_id: any): Observable<any>;
    deleteTemplate(template_id: any): Observable<any>;
}
