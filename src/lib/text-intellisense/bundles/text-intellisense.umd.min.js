!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("@angular/common"),require("@angular/forms"),require("keyboardevent-key-polyfill"),require("angular-text-input-autocomplete")):"function"==typeof define&&define.amd?define("text-intellisense",["exports","@angular/core","@angular/common/http","@angular/common","@angular/forms","keyboardevent-key-polyfill","angular-text-input-autocomplete"],t):t((e=e||self)["text-intellisense"]={},e.ng.core,e.ng.common.http,e.ng.common,e.ng.forms,e.keyboardeventKeyPolyfill,e.angularTextInputAutocomplete)}(this,(function(e,t,a,n,l,o,r){"use strict";var i=function(){function e(e,n){var l=this;this.elementRef=e,this.http=n,this.Id="Id",this.Name="Name",this.LabelName="LabelName",this.TabIndex=1,this.Type="text",this.Maxlength=255,this.Value="",this.Rows=1,this.TriggerCharacter="{",this.LabelStyle={},this.BorderStyle={},this.ValueStyle={},this.ReadOnly=!1,this.Disabled=!1,this.LabelTop=!1,this.database="ADMIN",this.schema="list",this.procedure="NASS_FIELDS_ListCombo",this.fieldName="TableFullName",this.apiURL="https://emunatemplate.aaadev.info/Api/",this.GetValue=new t.EventEmitter,this.BlurValue=new t.EventEmitter,this.randKey=Math.floor(1e10*Math.random())+1,this.showList=!1,this.listData=[],this.GenericToken="",this.leftCss="auto",this.httpOptionJSON={headers:new a.HttpHeaders({"Content-Type":"application/json"})},this.findChoices=function(e){return l.listData.filter((function(t){return t.toLowerCase().includes(e.toLowerCase())}))},this.getChoiceLabel=function(e){return"{"!==l.TriggerCharacter?l.TriggerCharacter+e+" ":"{"+e+"} "}}return e.prototype.ngOnInit=function(){this.getToken()},e.prototype.ngOnChanges=function(e){if(null!=e.LabelStyle&&null!=e.LabelStyle.currentValue){var t=e.LabelStyle.currentValue;this.elementRef.nativeElement.style.setProperty("--c-width",t["c-width"]),this.elementRef.nativeElement.style.setProperty("--c-height",t["c-height"]),this.elementRef.nativeElement.style.setProperty("--label-left",t["label-left"]),this.elementRef.nativeElement.style.setProperty("--label-top",t["label-top"])}if(null!=e.ValueStyle&&null!=e.ValueStyle.currentValue){t=e.ValueStyle.currentValue;this.elementRef.nativeElement.style.setProperty("--value-left",t["value-left"]),this.elementRef.nativeElement.style.setProperty("--value-top",t["value-top"])}},e.prototype.GetValueEvent=function(e){e.target.value;this.GetValue.emit(e.target.value)},e.prototype.OnBlurEvent=function(e){this.BlurValue.emit(e.target.value)},e.prototype.getToken=function(){var e=this;""==this.GenericToken&&this.http.get(this.apiURL+"GetSystemInfo?passcode=flipper613").subscribe((function(t){e.GenericToken=t.GenericToken,e.getGlobalField()}))},e.prototype.getGlobalField=function(){var e=this,t=this.apiURL+"Data/Exec/"+this.database+"/"+this.schema+"/"+this.procedure+"?api_key="+this.GenericToken;this.http.post(t,{},this.httpOptionJSON).subscribe((function(t){if(t){e.listData=[];var a;a=t;for(var n=0;n<a.length;n++){a[n].CodeId,a[n].Description;e.listData.push(a[n].Description)}}else e.listData=[]}),(function(t){e.listData=[]}))},e}();i.decorators=[{type:t.Component,args:[{selector:"emuna-text-intellisense",template:'<div class="position-relative {{randKey}}">\r\n\t<div class="emuna-controls" [ngClass]="{\'emuna-label-top\': (LabelTop),\'emuna-disabled\': Disabled}">\r\n\t\t<div class="emuna-common-control emuna-textarea-control" [ngStyle]="BorderStyle" [ngClass]="{\'emuna-no-padding-top\': (LabelName == \'\'),\'emuna-disabled\': Disabled}">\r\n\t\t\t<mwl-text-input-autocomplete-container>\r\n\t\t\t<textarea mwlTextInputAutocomplete [id]="Id" [name]="Name" [class]="\'emuna-form-control-textarea\'" [tabindex]="TabIndex" [rows]="Rows"\r\n\t\t\t [attr.maxlength]="Maxlength" [(ngModel)]="Value" [disabled]="Disabled" [ngClass]="{\'emuna-disabled\': Disabled}" [ngStyle]="ValueStyle"\r\n\t\t\t (blur)="OnBlurEvent($event)" (keyup)="GetValueEvent($event)" [triggerCharacter]="TriggerCharacter"\r\n        \t [findChoices]="findChoices" [getChoiceLabel]="getChoiceLabel"></textarea>\r\n        \t</mwl-text-input-autocomplete-container>\r\n\t\t\t<label *ngIf="LabelName != \'\'" [ngStyle]="LabelStyle" class="emuna-label">{{LabelName}}</label>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n    ',styles:[":host{--c-height:30px;--c-width:100%;--label-left:5px;--label-top:5px;--text-dark:#1d2936;--text-theme:#3ec6f4;--text-white:#fff;--value-left:10px;--value-top:0px}.emuna-controls.emuna-label-top{position:relative}.emuna-controls.emuna-label-top .emuna-common-control{padding-top:0;position:inherit}.emuna-controls.emuna-label-top .emuna-common-control .emuna-label{left:0!important;top:-24px!important}.emuna-no-padding-top{padding-top:0!important}.emuna-label{color:var(--text-theme);left:var(--label-left);opacity:1;position:absolute;top:var(--label-top);transform:translateY(0);transition:all .2s}.emuna-textarea-control{background-color:var(--text-white);border:1px solid var(--text-theme);border-radius:0;max-width:100%;padding:15px 5px 0;position:relative}.emuna-form-control-textarea:focus{outline:none}.emuna-form-control-textarea{background-color:var(--text-white);border:none;color:var(--text-dark);display:block;font-size:16px;font-weight:400;height:calc(var(--c-height) + var(--value-top));max-width:100%;padding-left:var(--value-left);padding-top:3px;padding-top:var(--value-top);resize:none;width:var(--c-width)}.emuna-disabled{background-color:#e9ecef!important;cursor:not-allowed!important;opacity:.9!important;pointer-events:none!important}"]}]}],i.ctorParameters=function(){return[{type:t.ElementRef},{type:a.HttpClient}]},i.propDecorators={Id:[{type:t.Input}],Name:[{type:t.Input}],LabelName:[{type:t.Input}],TabIndex:[{type:t.Input}],Type:[{type:t.Input}],Maxlength:[{type:t.Input}],Value:[{type:t.Input}],Rows:[{type:t.Input}],TriggerCharacter:[{type:t.Input}],LabelStyle:[{type:t.Input}],BorderStyle:[{type:t.Input}],ValueStyle:[{type:t.Input}],ReadOnly:[{type:t.Input}],Disabled:[{type:t.Input}],LabelTop:[{type:t.Input}],database:[{type:t.Input}],schema:[{type:t.Input}],procedure:[{type:t.Input}],fieldName:[{type:t.Input}],apiURL:[{type:t.Input}],GetValue:[{type:t.Output}],BlurValue:[{type:t.Output}]},o.polyfill();var s=function(){};s.decorators=[{type:t.NgModule,args:[{declarations:[i],imports:[n.CommonModule,l.FormsModule,a.HttpClientModule,r.TextInputAutocompleteModule],exports:[i]}]}],e.TextIntellisense=s,e.TextIntellisenseComponent=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=text-intellisense.umd.min.js.map