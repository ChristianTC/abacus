{"version":3,"sources":["../../../projects/rich-text-editor/src/lib/rich-text-editor.component.ts","../../../projects/rich-text-editor/src/lib/rich-text-editor.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵelementEnd","RichTextEditorComponent","elementRef","this","Type","Height","LabelStyle","Disabled","editorChange","EventEmitter","isExpand","Editor","DecoupledEditor","prototype","ngOnInit","ngOnChanges","event","console","log","minHeight","currentValue","nativeElement","style","setProperty","onChange","_a","data","editor","getData","emit","onReady","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","expandEditor","callapseEditor","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","LabelName","Value","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","i0.ɵɵtext","i0.ɵɵtemplate","$event","i0.ɵɵclassProp","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","RichTextEditor","imports","CommonModule","FormsModule","CKEditorModule","declarations","exports"],"mappings":"soBAWMA,EAAAA,eAAAA,EAAAA,SAAAA,GAA0BC,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,kBAA6CC,EAAAA,UAAAA,EAAAA,IAAAA,GAAoCC,EAAAA,mEAC3GH,EAAAA,eAAAA,EAAAA,SAAAA,GAA0BC,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,oBAA+CC,EAAAA,UAAAA,EAAAA,IAAAA,GAAmCC,EAAAA,iCAwDhH,SAAAC,EAAoBC,GAAAC,KAAAD,WAAAA,EAZXC,KAAAC,KAAO,UACPD,KAAAE,OAAS,QACTF,KAAAG,WAAa,GAGbH,KAAAI,UAAW,EACVJ,KAAAK,aAAe,IAAIC,EAAAA,aAE7BN,KAAAO,UAAW,EAGJP,KAAAQ,OAASC,SAGhBX,EAAAY,UAAAC,SAAA,aAGAb,EAAAY,UAAAE,YAAA,SAAYC,GACNA,EAAMX,SACRY,QAAQC,IAAIF,EAAMX,QAChBF,KAAKgB,UAAYH,EAAMX,OAAOe,aAC9BjB,KAAKD,WAAWmB,cAAcC,MAAMC,YAAY,cAAepB,KAAKgB,aAInElB,EAAAY,UAAAW,SAAA,SAAUC,OACTC,EADiBD,EAAAE,OACHC,UACpBzB,KAAKK,aAAaqB,KAAKH,IAGlBzB,EAAAY,UAAAiB,QAAA,SAASH,GACdA,EAAOI,GAAGC,qBAAqBC,cAAcC,aACzCP,EAAOI,GAAGI,KAAKC,QAAQC,QACvBV,EAAOI,GAAGC,uBAIhB/B,EAAAY,UAAAyB,aAAA,WACEnC,KAAKgB,UAAY,qBACjBhB,KAAKD,WAAWmB,cAAcC,MAAMC,YAAY,cAAepB,KAAKgB,WACpEhB,KAAKO,UAAW,GAGlBT,EAAAY,UAAA0B,eAAA,WACEpC,KAAKgB,UAAYhB,KAAKE,OACtBF,KAAKD,WAAWmB,cAAcC,MAAMC,YAAY,cAAepB,KAAKgB,WACpEhB,KAAKO,UAAW,yCAhDPT,GAAuBuC,EAAAC,kBAAAD,EAAAE,+CAAvBzC,EAAuB0C,UAAA,CAAA,CAAA,2BAAAC,OAAA,CAAAxC,KAAA,OAAAC,OAAA,SAAAC,WAAA,aAAAuC,UAAA,YAAAC,MAAA,QAAAvC,SAAA,YAAAwC,QAAA,CAAAvC,aAAA,gBAAAwC,SAAA,CAAAR,EAAAS,sBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,aAAA,UAAA,cAAA,OAAA,eAAA,QAAA,CAAA,QAAA,cAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,SAAA,UAAA,WAAA,gBAAA,SAAA,SAAA,CAAA,EAAA,MAAA,UAAA,EAAA,SAAA,CAAA,EAAA,MAAA,oBAAA,CAAA,EAAA,MAAA,oBAAAC,SAAA,SAAAC,EAAAC,SA9ClC1D,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAO2D,EAAAA,OAAAA,GAAaxD,EAAAA,eACpByD,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,SAAAA,GACAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,SAAAA,GACFzD,EAAAA,eACAH,EAAAA,eAAAA,EAAAA,WAAAA,GAA4BC,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,CAAmB,UAAA,SAAA4D,GAAA,OAAWH,EAAA/B,SAAAkC,KAA9B5D,CAAmB,SAAA,SAAA4D,GAAA,OAAsCH,EAAAzB,QAAA4B,MAAuC1D,EAAAA,eAC9HA,EAAAA,sBAP2B2D,EAAAA,YAAAA,aAAAA,EAAAA,UAEhBC,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,WACCD,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,QAAAA,EAAAA,UACAF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,OAAAA,EAAAA,UAEAF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,SAAAA,EAAAA,OAAAA,CAAiB,UAAAP,EAAAT,MAAjBgB,CAAiB,WAAAP,EAAAhD,gjCCE/B,6CAAawD,iEAAAA,IAAcC,QAAA,CAPhB,CACRC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oFAIUJ,EAAc,CAAAK,aAAA,CARVnE,GAAuB+D,QAAA,CAErCC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,gBAAcE,QAAA,CAELpE","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\n// import * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport * as DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\r\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\n\r\n@Component({\r\n  selector: 'emuna-rich-text-editor',\r\n  template: `\r\n  <div class=\"ckeditor-area\" [class.fixed-area]=\"isExpand\">\r\n    <div style=\"background: #dcdcdc;line-height: 32px;padding-left: 10px;\">\r\n      <label>{{LabelName}}</label>\r\n      <button *ngIf=\"!isExpand\" (click)=\"expandEditor()\" class=\"btn btn-exp\"><i class=\"fal fa-expand-arrows\"></i></button>\r\n      <button *ngIf=\"isExpand\"  (click)=\"callapseEditor()\" class=\"btn btn-exp\"><i class=\"fal fa-compress-alt\"></i></button>\r\n    </div>\r\n    <ckeditor [editor]=\"Editor\" [(ngModel)]=\"Value\" (change)=\"onChange($event)\" (ready)=\"onReady($event)\" [disabled]=\"Disabled\"></ckeditor>   \r\n  </div>\r\n  `,\r\n  styles: [`\r\n    :host {\r\n      --ck-height: 200px;\r\n    }\r\n    .ckeditor-area {width:100%;position:relative;}\r\n    .fixed-area {\r\n      position: fixed !important;\r\n      top: 0px;\r\n      left: 0px;\r\n      right: 10px;\r\n      z-index: 1200;\r\n      height: 100vh;\r\n      background: #fff;\r\n      overflow: auto;\r\n    }\r\n    .btn-exp,.btn-exp:hover,.btn-exp:focus {\r\n        position: absolute;\r\n        right: 10px;\r\n        z-index: 100;\r\n        top: 4px !important;\r\n        background: transparent;\r\n        border: none;\r\n        outline: none;\r\n        color: #000;\r\n        box-shadow: none;\r\n        padding: 2px 7px;\r\n        font-size: 14px;\r\n    }\r\n    .fixed-area .btn-exp {\r\n      z-index:1400 !important;\r\n    }\r\n    :host::ng-deep .ck-editor__editable_inline {\r\n      height: var(--ck-height);\r\n      overflow: auto;\r\n    }\r\n  `]\r\n})\r\nexport class RichTextEditorComponent implements OnInit {\r\n\r\n  @Input() Type = 'classic';\r\n  @Input() Height = '300px';\r\n  @Input() LabelStyle = {};\r\n  @Input() LabelName: string;\r\n  @Input() Value: string;\r\n  @Input() Disabled = false;\r\n  @Output() editorChange = new EventEmitter();\r\n  minHeight: string;\r\n  isExpand = false;\r\n\r\n  // public Editor = ClassicEditor;\r\n  public Editor = DecoupledEditor;\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(event) {\r\n    if (event.Height) {\r\n      console.log(event.Height)\r\n        this.minHeight = event.Height.currentValue;\r\n        this.elementRef.nativeElement.style.setProperty('--ck-height', this.minHeight);\r\n    }\r\n  }\r\n\r\n  public onChange( { editor }: ChangeEvent ) {\r\n    const data = editor.getData();\r\n    this.editorChange.emit(data);\r\n  }\r\n\r\n  public onReady( editor ) {\r\n    editor.ui.getEditableElement().parentElement.insertBefore(\r\n        editor.ui.view.toolbar.element,\r\n        editor.ui.getEditableElement()\r\n    );\r\n  }\r\n\r\n  expandEditor() {\r\n    this.minHeight = 'calc(100vh - 72px)';\r\n    this.elementRef.nativeElement.style.setProperty('--ck-height', this.minHeight);\r\n    this.isExpand = true;\r\n  }\r\n\r\n  callapseEditor() {\r\n    this.minHeight = this.Height;\r\n    this.elementRef.nativeElement.style.setProperty('--ck-height', this.minHeight);\r\n    this.isExpand = false;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RichTextEditorComponent } from './rich-text-editor.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [RichTextEditorComponent],\r\n  imports: [\r\n  \tCommonModule,\r\n  \tFormsModule,\r\n  \tCKEditorModule\r\n  ],\r\n  exports: [RichTextEditorComponent]\r\n})\r\nexport class RichTextEditor { }\r\n"]}