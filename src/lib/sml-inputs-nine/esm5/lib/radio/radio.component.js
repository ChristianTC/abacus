import { __decorate } from "tslib";
import { Component, OnInit, Input, Output, EventEmitter, ElementRef } from '@angular/core';
var RadioComponent = /** @class */ (function () {
    function RadioComponent(elementRef) {
        var _this = this;
        this.elementRef = elementRef;
        this.radioChangeHandler = new EventEmitter();
        this.changeevt1 = function (event) {
            _this.radioChangeHandler.emit(event);
        };
    }
    RadioComponent.prototype.ngOnInit = function () { };
    RadioComponent.prototype.ngOnChanges = function (event) {
        if (event.radioStyle != undefined && event.radioStyle.currentValue != undefined) {
            var css = event.radioStyle.currentValue;
            this.elementRef.nativeElement.style.setProperty('--radio-width', css['width-height']);
            this.elementRef.nativeElement.style.setProperty('--radio-height', css['width-height']);
            this.elementRef.nativeElement.style.setProperty('--radio-border-width', css.borderwidth);
            this.elementRef.nativeElement.style.setProperty('--radio-border-color', css.bordercolor);
            this.elementRef.nativeElement.style.setProperty('--radio-background', css.background);
            this.elementRef.nativeElement.style.setProperty('--radio-background-unchecked', css['background-unchecked']);
        }
        if (event.labelStyle != undefined && event.labelStyle.currentValue != undefined) {
            var css = event.labelStyle.currentValue;
            this.elementRef.nativeElement.style.setProperty('--c-width', css['c-width']);
            this.elementRef.nativeElement.style.setProperty('--c-height', css['c-height']);
            this.elementRef.nativeElement.style.setProperty('--label-left', css['label-left']);
            this.elementRef.nativeElement.style.setProperty('--label-top', css['label-top']);
        }
        if (event.valueStyle != undefined && event.valueStyle.currentValue != undefined) {
            var css = event.valueStyle.currentValue;
            this.elementRef.nativeElement.style.setProperty('--value-left', css['value-left']);
            this.elementRef.nativeElement.style.setProperty('--value-top', css['value-top']);
        }
    };
    RadioComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], RadioComponent.prototype, "id", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "jsonData", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "value", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "label", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "switchStyle", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "labelStyle", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "borderStyle", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "valueStyle", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "radioStyle", void 0);
    __decorate([
        Input()
    ], RadioComponent.prototype, "signalStyle", void 0);
    __decorate([
        Output()
    ], RadioComponent.prototype, "radioChangeHandler", void 0);
    RadioComponent = __decorate([
        Component({
            selector: 'sml-input-radio',
            template: "\n    <div class=\"position-relative\">\n    <div class=\"input-field\"  \n      [ngClass]=\"{'float-group':switchStyle,'float-groupdd': !switchStyle,'signal-line': signalStyle}\"\n      [ngStyle]=\"borderStyle\" >\n      <div class=\"radio\">\n        <div *ngFor=\"let data of jsonData;let i=index\" [ngClass]=\"{'dis-inline': radioStyle?.isInline , 'dis-block': !radioStyle?.isInline}\">\n          <input *ngIf=\"data.disabled == undefined || data.disabled == null || data.disabled == '' || data.disabled == false\" type=\"radio\" id=\"{{id}}-{{i}}\" name=\"{{id}}-{{i}}\"  [value]=\"data.value\" [(ngModel)]=\"value\" (change)=\"changeevt1(value)\">\n          <input *ngIf=\"data.disabled != undefined || data.disabled != null || data.disabled != '' || data.disabled == true\" type=\"radio\" id=\"{{id}}-{{i}}\" name=\"{{id}}-{{i}}\"  [value]=\"data.value\" [(ngModel)]=\"value\" (change)=\"changeevt1(value)\" disabled>\n          <label for=\"{{id}}-{{i}}\" class=\"clabel\"></label>\n          <label for=\"{{id}}-{{i}}\" [ngStyle]=\"valueStyle\" class=\"vlabel\">{{data.name}}</label>\n        </div>\n      </div>\n      <label class=\"label\" [ngStyle]=\"labelStyle\">{{label?label:'Label Name'}}</label>\n    </div>\n    </div>\n    ",
            styles: ["\n    /* css variable */\n    :host {\n        --c-width: 645px;\n        --c-height: 25px;\n        --radio-width: 20px;\n        --radio-height: 20px;\n        --radio-border-width: 1px;\n        --radio-border-color: #D5DBE0;\n        --radio-background: #348fe2;\n        --radio-background-unchecked: #D5DBE0;\n        --label-left: 10px;\n        --label-top: 0px;\n        --value-left: 10px;\n        --value-top: 0px;\n    }\n    /* radio css */\n    .clabel {\n        position: relative;\n        cursor: pointer;\n        width: var(--radio-width);\n        height: var(--radio-height);\n        line-height: 20px;\n        display: inline-block;\n        color: #666;\n        margin-bottom: 0px;\n    }\n    .vlabel{\n        line-height: var(--radio-height);\n        vertical-align: top;\n        margin-left: 5px;\n        margin-right: 10px;\n        margin-bottom: 0px;\n    }\n    .dis-inline{\n        display: inline-block;\n    }\n    .dis-block{\n        display: block;\n    }\n    .radio{\n        display: block;\n        padding-top: 8px;\n        padding-right: 0.75rem;\n        padding-bottom: 4px;\n        padding-left: var(--value-left);\n        min-height: var(--c-height) !important;\n    }\n    [type=\"radio\"]:checked, [type=\"radio\"]:not(:checked) {\n        position: absolute;\n        left: -9999px;\n    }\n    [type=\"radio\"]:checked+label.clabel:before, [type=\"radio\"]:not(:checked)+label.clabel:before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 1px;\n        width: var(--radio-width);\n        height: var(--radio-height);\n        border-width: var(--radio-border-width) !important;\n        border-color: var(--radio-border-color) !important;\n        border:1px solid;\n        border-radius: 100%;\n        background: var(--radio-background-unchecked);\n    }\n    [type=\"radio\"]:checked+label.clabel:after, [type=\"radio\"]:not(:checked)+label.clabel:after {\n        content: '';\n        font-family: \"Font Awesome 5 Free\";\n        font-weight: 900;\n        line-height: 1;\n        position: absolute;\n        top: 5px;\n        left: 4px;\n        -webkit-transition: all 0.2s ease;\n        transition: all 0.2s ease;\n        font-size: 10px;\n        color: #fff\n    }\n    [type=\"radio\"]:not(:checked)+label.clabel:after {\n        opacity: 0;\n        -webkit-transform: scale(0);\n        transform: scale(0);\n    }\n    [type=\"radio\"]:checked+label.clabel:after {\n        opacity: 1;\n        -webkit-transform: scale(1);\n        transform: scale(1);\n    }\n    [type=\"radio\"]:checked+label.clabel::before {\n        background-color: var(--radio-background);\n        border-width: var(--radio-border-width) !important;\n        border-color: var(--radio-border-color) !important;\n        border:1px solid;\n        border-radius: 100%;\n    }\n    /* box css */\n    .position-relative {\n        position: relative;\n    }\n    .input-field {\n        border: 1px solid #dee2e6;\n        border-radius: 2px;\n        width: var(--c-width) !important;\n        min-height: var(--c-height) !important;\n        height: auto;\n    }\n    .signal-line{\n        border-top: none !important;\n        border-left: none !important;\n        border-right: none !important;\n        border-radius: 0px !important;\n    }\n    /* labelcss */\n    \n    .label {\n        position: absolute;\n        top: -24px;\n        left: 0px; \n        font-size: 12px;\n        transition: all 0.1s;\n    } \n    .float-group {\n        position: relative;\n        padding: 14px 24px 0px 0px;\n    } \n    .float-group .radio {\n        padding-top: var(--value-top);\n        padding-right: 0px;\n        padding-bottom: 0px;\n        padding-left: var(--value-left);\n    }\n    .float-group .label {\n        font-size: 9px;\n        font-weight: bold !important;  /* floating lable always bold */\n        position: absolute;\n        top: var(--label-top);\n        left: var(--label-left);\n        transform: translateY(0px);\n        transition: all 200ms;\n        opacity: 1;\n        margin: 0;\n        width: 87%;\n        height: auto;\n    }\n    "]
        })
    ], RadioComponent);
    return RadioComponent;
}());
export { RadioComponent };
//# sourceMappingURL=data:application/json;base64,