import { __decorate } from "tslib";
import { Component, OnInit, Input, Output, ElementRef, EventEmitter } from '@angular/core';
var TextareaComponent = /** @class */ (function () {
    function TextareaComponent(elementRef) {
        this.elementRef = elementRef;
        this.staticStyle = false;
        this.readOnly = false;
        this.getvalue = new EventEmitter;
        this.onblur = new EventEmitter;
    }
    TextareaComponent.prototype.ngOnInit = function () { };
    TextareaComponent.prototype.ngOnChanges = function (event) {
        if (event.style != undefined && event.style.currentValue != undefined) {
            var css = event.style.currentValue;
            this.elementRef.nativeElement.style.setProperty('--c-width', css['c-width']);
            this.elementRef.nativeElement.style.setProperty('--c-height', css['c-height']);
            this.elementRef.nativeElement.style.setProperty('--label-left', css['label-left']);
            this.elementRef.nativeElement.style.setProperty('--label-top', css['label-top']);
        }
        if (event.valueStyle != undefined && event.valueStyle.currentValue != undefined) {
            var css = event.valueStyle.currentValue;
            this.elementRef.nativeElement.style.setProperty('--value-left', css['value-left']);
            this.elementRef.nativeElement.style.setProperty('--value-top', css['value-top']);
        }
    };
    TextareaComponent.prototype.getValue = function (event) {
        this.getvalue.emit(event.target.value);
    };
    TextareaComponent.prototype.onBlur = function (event) {
        this.onblur.emit(event.target.value);
    };
    TextareaComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], TextareaComponent.prototype, "value", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "name", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "row", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "column", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "label", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "maxLenght", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "switchStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "style", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "borderStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "signalStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "staticStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "valueStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "inputStyle", void 0);
    __decorate([
        Input()
    ], TextareaComponent.prototype, "readOnly", void 0);
    __decorate([
        Output()
    ], TextareaComponent.prototype, "getvalue", void 0);
    __decorate([
        Output()
    ], TextareaComponent.prototype, "onblur", void 0);
    TextareaComponent = __decorate([
        Component({
            selector: 'sml-input-textarea',
            template: "\n  <div class=\"position-relative\">\n  <div class=\"input-field\" \n      [ngStyle]=\"borderStyle\" \n      [ngClass]=\"{'float-group':switchStyle,'float-groupdd': !switchStyle,'signal-line': signalStyle,'float-group-static': staticStyle}\">\n      <textarea *ngIf=\"!readOnly\"\n      type=\"text\" \n      class=\"form-control\" \n      [value]=\"value\"  \n      [rows]=\"row\" \n      [cols]=\"column\"\n      (keyup)=\"getValue($event)\" \n      (blur)=\"onBlur($event)\"\n      [ngStyle]=\"valueStyle\"\n      required></textarea>\n      <textarea *ngIf=\"readOnly\"\n      type=\"text\" \n      class=\"form-control\" \n      [value]=\"value\"  \n      [rows]=\"row\" \n      [cols]=\"column\"\n      (keyup)=\"getValue($event)\" \n      (blur)=\"onBlur($event)\"\n      [ngStyle]=\"valueStyle\"\n      required readOnly></textarea>\n    <label class=\"label\" \n          [ngStyle]=\"style\">\n          {{ label }} <span *ngIf=\"maxLenght\">: {{ maxLenght }}</span>\n    </label>\n  </div>\n</div>\n  ",
            styles: ["\n  /* css variable */\n  :host {\n      --c-width: 645px;\n      --label-left: 10px;\n      --label-top: 0px;\n      --value-left: 10px;\n      --value-top: 0px;\n  }\n  /* box css */\n  .position-relative {\n      position: relative;\n  }\n  .input-field {\n      border: 1px solid rgb(222, 226, 230);\n      border-radius: 2px;\n      width: var(--c-width) !important;\n  }\n  /* control css */\n  .form-control {\n      display: block;\n      padding-top: 0.375rem;\n      padding-right: 0.75rem;\n      padding-bottom: 0.375rem;\n      padding-left: var(--value-left);\n      font-size: 1rem;\n      line-height: 1.5;\n      color: #495057;\n      background-color: #fff;\n      background-clip: padding-box;\n      border: none;\n      resize: none;\n      transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n  }\n  .form-control {\n      background-color: inherit;\n      box-shadow: none !important;\n  }\n  .signal-line{\n      border-top: none !important;\n      border-left: none !important;\n      border-right: none !important;\n      border-radius: 0px !important;\n  }\n  /* labelcss */\n  .label {\n      position: absolute;\n      top: -24px;\n      left: 0px; \n      font-size: 12px;\n      padding: 0px !important;\n        text-align: left;\n  }\n  .float-group {\n      position: relative;\n      padding: 14px 24px 2px 0px;\n  }\n  .float-group .form-control {\n      padding-top: var(--value-top);\n      padding-right: 0px;\n      padding-bottom: 0px;\n      padding-left: var(--value-left);\n  }\n  .float-group .label {\n    font-size: 12px;\n    font-weight: normal;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: var(--label-left);\n    transition: all 200ms;\n    opacity: 1;\n    margin: 0;\n    width: 87%;\n    height: auto;\n  }\n\n  @media all and (-ms-high-contrast:none) {\n      *::-ms-backdrop, .float-group .label {\n          top: 0%!important;\n          transform: translateY(50%);\n      }\n  }\n  \n  .float-group .form-control:focus {\n      box-shadow: none;\n      border: none\n  }\n  .float-group-static .label {\n      font-size: 9px;\n      font-weight: bold !important;  /* floating lable always bold */\n      position: absolute;\n      top: var(--label-top);\n      left: var(--label-left);\n      transform: translateY(0px);\n      transition: all 200ms;\n      opacity: 1;\n      margin: 0;\n      width: 87%;\n      height: auto;\n   }\n  .float-group .form-control:focus-within ~ .label,\n  .float-group .form-control:valid ~ .label {\n      font-size: 9px;\n      font-weight: bold !important;  /* floating lable always bold */\n      position: absolute;\n      top: var(--label-top);\n      left: var(--label-left);\n      transform: translateY(0px);\n      transition: all 200ms;\n      opacity: 1;\n      margin: 0;\n      width: 87%;\n      height: auto;\n  }  \n  "]
        })
    ], TextareaComponent);
    return TextareaComponent;
}());
export { TextareaComponent };
//# sourceMappingURL=data:application/json;base64,